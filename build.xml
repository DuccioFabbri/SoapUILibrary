<project name="SoapUILibrary" default="dist" basedir=".">
  <description>
    simple example build file
  </description>
  <!-- set global properties for this build -->
	<property name="clone_dest" location="clone_dest"/>
	<property name="src" location="src"/>
	<property name="build" location="build"/>
  	<property name="dist" location="dist"/>




  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
  	<git-clone-pull repository="https://github.com/DuccioFabbri/SoapUILibrary.git" dest="${src}" />
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>

  <target name="compile" depends="init"
        description="compile the source">
    <!-- Compile the java code from ${src} into ${build} -->
   
	<javac srcdir="src" destdir="build"
	executable="C:\\Program Files\\Java\\jdk1.8.0_51\\bin\\javac"
         />
  </target>

	<path id="groovy-path">
        <fileset dir="lib" includes="groovy-all-2.4.7.jar" />
    </path>

	<!-- http://stackoverflow.com/questions/23243464/cant-run-groovyc-from-ant-build-xml -->
    <taskdef name="groovyc"
        classname="org.codehaus.groovy.ant.Groovyc"
        classpathref="groovy-path" />		
		
	<target name="groovy_compile" depends="init">
	<echo message="Compiling Groovy sources..." />
		<groovyc destdir="build">            
			<src path="src" />
			<classpath>
			  <path location="bin"/>
			  <fileset dir="lib">
				  <include name="*.jar" />
			  </fileset>
			</classpath>
		</groovyc>
	</target>

  <target name="groovy_" depends="init">
    <exec executable = "C:\\Program Files (x86)\\Groovy\\Groovy-2.4.7\\bin\\groovyc.exe" >
		<arg value = "C:\\Temp\\SoapUILibrary\\src\\com\\duccius\\soapui\\library\\TCData.groovy" />		
		<arg value = "C:\\Temp\\SoapUILibrary\\src\\com\\duccius\\soapui\\library\\DbConnection.groovy" />		
	</exec>
</target>			
			
  <target name="dist" depends="groovy_compile"
        description="generate the distribution">
    <!-- Create the distribution directory -->
    <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
    <jar jarfile="${dist}/example.jar" basedir="C:\\Temp\\SoapUILibrary\\build"/>
  </target>
<!--
  <target name="clean"
        description="clean up">
    
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>
-->
<!-- http://tlrobinson.net/blog/2008/11/ant-tasks-for-git/ -->
	
	<macrodef name = "git">
	    <attribute name = "command" />
	    <attribute name = "dir" default = "" />
	    <element name = "args" optional = "true" />
	    <sequential>
	        <echo message = "C:\\Users\\Duccio\\AppData\\Local\\GitHub\\PortableGit_284a859b0e6deba86edc624fef1e4db2aa8241a9\\cmd\\git @{command}" />
	        <exec executable = "C:\\Users\\Duccio\\AppData\\Local\\GitHub\\PortableGit_284a859b0e6deba86edc624fef1e4db2aa8241a9\\cmd\\git" dir = "@{dir}">
	            <arg value = "@{command}" />
	            <args/>
	        </exec>
	    </sequential>
	</macrodef>

	<macrodef name = "git-clone-pull">
	    <attribute name = "repository" />
	    <attribute name = "dest" />
	    <sequential>
	        <git command = "clone">
	            <args>
	                <arg value = "@{repository}" />
	                <arg value = "@{dest}" />
	            </args>
	        </git>
	        <git command = "pull" dir = "@{dest}" />
	    </sequential>
	</macrodef>
</project>